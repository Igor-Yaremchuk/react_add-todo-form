{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","preparedTodos","userId","usersFromServer","find","App","useState","inputTitle","setInputTitle","selectedUserId","setSelectedUserId","hasTitleError","setHasTitleError","hasSelectedError","setHasSelectedError","setTodos","newId","Math","max","action","method","onSubmit","event","preventDefault","newUser","newTodo","currTodo","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2f23d4e.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { ChangeEvent, FormEvent, useState } from 'react';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport './App.scss';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId) || null,\n}));\n\nexport const App: React.FC = () => {\n  const [inputTitle, setInputTitle] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasSelectedError, setHasSelectedError] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>(preparedTodos);\n\n  const newId = Math.max(...todos.map(todo => todo.id)) + 1;\n\n  const clearForm = () => {\n    setInputTitle('');\n    setSelectedUserId(0);\n  };\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setHasTitleError(!inputTitle);\n    setHasSelectedError(!selectedUserId);\n\n    const newUser = usersFromServer.find(\n      user => user.id === selectedUserId,\n    );\n\n    if (newUser) {\n      const newTodo = {\n        id: newId,\n        title: inputTitle,\n        completed: false,\n        userId: newUser.id,\n        user: newUser,\n      };\n\n      if (inputTitle && selectedUserId) {\n        setTodos(currTodo => [...currTodo, newTodo]);\n        clearForm();\n      }\n    }\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(+event.target.value);\n    setHasSelectedError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              name=\"title\"\n              value={inputTitle}\n              onChange={handleInput}\n            />\n          </label>\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={selectedUserId}\n              onChange={handleSelect}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option\n                  value={user.id}\n                  key={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n          {hasSelectedError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}